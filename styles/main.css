body,
html {
	margin: 0;
	padding: 0;
	scroll-behavior: smooth;
	width: 100vw;
	height: 400vh;
}

.main-container {
	height: 200vh; /* main-section이 sticky 효과를 가질 범위 설정 */
}

.main-section {
	position: sticky;
	height: 100vh;
	top: 0;
	background-color: #f0f0f0;
	font-size: 48px;
	display: flex;
	justify-content: center;
	align-items: center;
	overflow: hidden;
}

.layer {
	position: absolute;
	width: 100%;
	height: 100%;
	object-fit: cover; /* 이미지가 화면에 꽉 차게 함 */
	transition: transform 0.3s, opacity 0.3s;
}

h1 {
	position: relative;
	z-index: 3;
}

.cards-container {
	display: flex;
	justify-content: center;
	align-items: center;
	flex-direction: column;
	gap: 20px;
	margin-top: 20px;
	padding-top: 40px;
	padding-bottom: 250px;
}

.card {
	width: 700px;
	height: 484.2px;
	border-radius: 4px;
	display: flex;
	justify-content: center;
	align-items: center;
	font-size: 24px;
	transition: transform 0.3s, box-shadow 0.3s;
	background-image: url("../images/canvas_texture.jpg");
	background-size: cover;
	background-position: center;
	box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
	cursor: pointer;
}

.card:hover {
	transform: scale(1.1);
}

.card.previous,
.card.next {
	transform: scale(0.7);
	opacity: 0.7;
}

.nav {
	height: 110px;
	width: 100vw;
}

.nav > button {
	height: 100%;
	width: 100%;
	border: none;
}

.bob {
	position: sticky;
	width: 30vw;
	left: 100%;
	bottom: 0;
}

.modal {
	position: fixed;
	top: 0;
	left: 0;
	width: 100vw;
	height: 100vh;
	display: flex;
	justify-content: center;
	align-items: center;
	background: rgba(0, 0, 0, 0.5);
	visibility: hidden;
	opacity: 0;
	transition: visibility 0s, opacity 0.5s linear;
	cursor: pointer;
}

.modal-content {
	width: 800px;
	height: 554.4px;
	background: blueviolet;
	border-radius: 8px;
	display: flex;
	justify-content: center;
	align-items: center;
	font-size: 24px;
	transition: transform 0.1s, box-shadow 0.1s;
	will-change: transform;
}

.modal.visible {
	visibility: visible;
	opacity: 1;
}

.modal-content:hover {
	transform: perspective(1000px) rotateY(calc(var(--mouseX) * 1deg))
		rotateX(calc(var(--mouseY) * 1deg));
}
